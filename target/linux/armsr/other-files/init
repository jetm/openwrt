#!/bin/sh

export INITRAMFS=1
export PATH='/bin:/sbin:/usr/sbin:/usr/bin'

mount_setup() {
    mount -t proc proc /proc -o nosuid,noexec,nodev
    mount -t sysfs sys /sys -o nosuid,noexec,nodev
    mount -t devtmpfs dev /dev -o mode=0755,nosuid

    if [ -e /sys/firmware/efi ]; then
        mount -t efivarfs efivarfs /sys/firmware/efi/efivars -o nosuid,nodev,noexec
    fi
}

mount_setup

# shellcheck disable=SC2046
modprobe -a $(cut -d: -f1 /etc/modules-list.kmod)

NEW_ROOT=/new_root
mkdir -p "${NEW_ROOT}"

wait_for_rootfs() {
    timeout=10
    while [ "$timeout" -gt 0 ]; do
        ROOTFS=$(blkid --label rootfs)
        [ "${ROOTFS}" ] && return
        sleep 1
        timeout=$((timeout - 1))
        echo "Waiting for root block device [$timeout] ..."
    done
}

wait_for_rootfs
if [ -z "${ROOTFS}" ]; then
    echo "No rootfs found"
    exit 1
fi

mount "${ROOTFS}" "${NEW_ROOT}"

mount |
    awk '$3 !~ /^(\/|.*efivars|.*new_root|.*dev|.*proc|.*sys)$/ {print $3}' |
    while IFS= read -r dir; do
        mkdir -p "$NEW_ROOT$dir"
        mount -o move "$dir" "$NEW_ROOT${dir}"
    done

echo "Changing to real rootfs..."
exec switch_root "${NEW_ROOT}" /sbin/init "$@"
